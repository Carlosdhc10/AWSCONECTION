name: CI/CD for API Gateway

on:
  push:
    paths:
      - 'api-gateway/**'
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📦 Build & Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest api-gateway/ \
            --build-arg SERVER_PORT=${{ secrets.SERVER_PORT_API_GATEWAY }}

          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Deploy API Gateway to AWS EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_API_GATEWAY }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔄 Stopping previous container if it exists..."
            sudo docker stop api-gateway || true
            sudo docker rm api-gateway || true

            echo "🧹 Cleaning up old Docker images..."
            sudo docker image prune -af

            echo "📥 Pulling the latest image from Docker Hub..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

            echo "🚀 Running the new container..."
            sudo docker run -d --name api-gateway \
              --restart=always \
              -p ${{ secrets.SERVER_PORT_API_GATEWAY }}:${{ secrets.SERVER_PORT_API_GATEWAY }} \
              -e SERVER_PORT=${{ secrets.SERVER_PORT_API_GATEWAY }} \
              ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest