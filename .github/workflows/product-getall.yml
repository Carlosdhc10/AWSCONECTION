name: CI/CD for Product GetAll Service

on:
  push:
    paths:
      - 'Backend_uceShoes/productManagement/productCreation/Products/productGetAll/**'
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üõ†Ô∏è Checkout code
        uses: actions/checkout@v3

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üì¶ Build & Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product-getall:latest Backend_uceShoes/productManagement/productCreation/Products/productGetAll \
            --build-arg POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
            --build-arg POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
            --build-arg POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            --build-arg POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }}

          docker push ${{ secrets.DOCKER_USERNAME }}/product-getall:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_PRODUCTS }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üîÑ Stopping previous container if it exists..."
            sudo docker stop product-getall || true
            sudo docker rm product-getall || true

            echo "üßπ Cleaning up old Docker images..."
            sudo docker image prune -af

            echo "üì• Pulling the latest image from Docker Hub..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/product-getall:latest

            echo "üöÄ Running the new container..."
            sudo docker run -d --name product-getall \
              --restart=always \
              -p ${{ secrets.SERVER_PORT_GET_ALL_PRODUCTS }}:${{ secrets.SERVER_PORT_GET_ALL_PRODUCTS }} \
              -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
              -e POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
              -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              ${{ secrets.DOCKER_USERNAME }}/product-getall:latest
