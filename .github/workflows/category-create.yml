name: üöÄ Deploy Category Create Service to AWS

on:
  push:
    paths:
      - 'Backend_uceShoes/productManagement/productCreation/Category/createCategory/**'
    branches:
      - TestConectionProducts

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üõ†Ô∏è Checkout del repositorio
        uses: actions/checkout@v4

      - name: üîß Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Iniciar sesi√≥n en Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üì¶ Construir y subir imagen Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/category-create:latest \
            -f Backend_uceShoes/productManagement/productCreation/Category/createCategory/Dockerfile \
            Backend_uceShoes/productManagement/productCreation/Category/createCategory

          docker push ${{ secrets.DOCKER_USERNAME }}/category-create:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: üöÄ Connect to EC2 and Deploy Category Create Service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_CREATE_CATEGORY }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üîç Checking if Docker is installed..."
            if ! command -v docker &> /dev/null; then
              echo "üì¶ Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -a -G docker $USER
            fi

            echo "üõë Stopping and removing previous container..."
            if sudo docker ps -q -f name=category-create; then
              sudo docker stop category-create
              sudo docker rm category-create
            else
              echo "‚ö†Ô∏è No running container found."
            fi

            echo "üßπ Removing old Docker images..."
            sudo docker image prune -af || echo "‚ö†Ô∏è No images to remove."

            echo "üì• Pulling the latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/category-create:latest

            echo "üîé Checking required environment variables..."
            REQUIRED_VARS=(POSTGRES_HOST POSTGRES_PORT POSTGRES_USER POSTGRES_PASSWORD POSTGRES_DB SERVER_PORT_CREATE_CATEGORY)
            for VAR in "${REQUIRED_VARS[@]}"; do
              if [[ -z "${!VAR}" ]]; then
                echo "‚ùå ERROR: Required environment variable $VAR is not set."
                exit 1
              fi
            done

            echo "üöÄ Running the new container..."
            sudo docker run -d \
              --name category-create \
              -p ${{ secrets.SERVER_PORT_CREATE_CATEGORY }}:${{ secrets.SERVER_PORT_CREATE_CATEGORY }} \
              -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
              -e POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
              -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/category-create:latest

            echo "üîç Verifying deployment..."
            sleep 10  # Espera para asegurarse de que el contenedor inicie correctamente

            if sudo docker ps -q -f name=category-create | grep category-create; then
              echo "‚úÖ Deployment successful: Category Create Service is running."
            else
              echo "‚ùå Deployment failed: Fetching logs..."
              sudo docker logs category-create
              exit 1
            fi

      - name: üîê Log out of Docker Hub
        run: docker logout
