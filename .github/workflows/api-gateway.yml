name: üöÄ Deploy API Gateway to AWS

on:
  push:
    paths:
      - 'api-gateway/**'
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üì¶ Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest \
            -f api-gateway/Dockerfile api-gateway/
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

  deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
      - name: üöÄ Deploy API Gateway to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_API_GATEWAY }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üîç Checking if Docker is installed..."
            if ! command -v docker &> /dev/null; then
              echo "üì¶ Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo usermod -a -G docker $USER
            fi

            echo "üõë Stopping previous container..."
            if sudo docker ps -q -f name=api-gateway; then
              sudo docker stop api-gateway
              sudo docker rm api-gateway
            else
              echo "‚ö†Ô∏è No previous container found."
            fi

            echo "üßπ Removing old Docker images..."
            sudo docker image prune -af || echo "No images to remove."

            echo "üì• Pulling the latest Docker image..."
            if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
              echo "‚ùå ERROR: DOCKER_USERNAME is empty."
              exit 1
            fi
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

            echo "üöÄ Running the new container..."
            if [ -z "${{ secrets.SERVER_PORT_API_GATEWAY }}" ]; then
              echo "‚ùå ERROR: SERVER_PORT_API_GATEWAY is empty."
              exit 1
            fi

            sudo docker run -d \
              --name api-gateway \
              -p ${{ secrets.SERVER_PORT_API_GATEWAY }}:${{ secrets.SERVER_PORT_API_GATEWAY }} \
              -e SERVER_PORT=${{ secrets.SERVER_PORT_API_GATEWAY }} \
              --restart=always \
              ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

            echo "üîç Verifying deployment..."
            if sudo docker ps -f name=api-gateway | grep api-gateway; then
              echo "‚úÖ Deployment successful: API Gateway is running."
            else
              echo "‚ùå Deployment failed: Check logs for errors."
              exit 1
            fi 

      - name: üîê Log out of Docker Hub
        run: docker logout
